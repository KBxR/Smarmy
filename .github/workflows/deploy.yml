name: Deploy to Unraid
on:
  push:
    branches:
      - main
env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  GUILD_ID: ${{ secrets.GUILD_ID }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PIN_SERVER: ${{ secrets.PIN_SERVER }}
  PIN_CHANNEL: ${{ secrets.PIN_CHANNEL }}
  LASTFM_KEY: ${{ secrets.LASTFM_KEY }}
  LASTFM_SECRET: ${{ secrets.LASTFM_SECRET }}
  REBRICK_KEY: ${{ secrets.REBRICK_KEY }}
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: sicklesheen/smarmy:latest
      - name: Copy docker-compose.yml to remote server
        run: |
          sshpass -p ${{ secrets.UNRAID_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.UNRAID_IP }}:/root/docker-compose.yml
      - name: Deploy to Unraid
        run: |
          sshpass -p ${{ secrets.UNRAID_PASSWORD }} ssh -tt -o StrictHostKeyChecking=no root@${{ secrets.UNRAID_IP }} << EOF
          docker pull sicklesheen/smarmy:latest
          export BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          export CLIENT_ID=${{ secrets.CLIENT_ID }}
          export GUILD_ID=${{ secrets.GUILD_ID }}
          export ADMIN_ID=${{ secrets.ADMIN_ID }}
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          export PIN_SERVER=${{ secrets.PIN_SERVER }}
          export PIN_CHANNEL=${{ secrets.PIN_CHANNEL }}
          export LASTFM_KEY=${{ secrets.LASTFM_KEY }}
          export LASTFM_SECRET=${{ secrets.LASTFM_SECRET }}
          export REBRICK_KEY=${{ secrets.REBRICK_KEY }}
          docker-compose -f /root/docker-compose.yml up -d
          EOF
      - name: Check if the app is running
        run: |
          sshpass -p ${{ secrets.UNRAID_PASSWORD }} ssh -o StrictHostKeyChecking=no root@${{ secrets.UNRAID_IP }} docker ps | grep smarmy